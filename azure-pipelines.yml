# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
- master

jobs:
- job: pnlbwh_tbss_pipeline
  timeoutInMinutes: 240

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    dockerId: tbillah
    imageName: tbillah/fsl_tbss
    user: pnlbwh
    wd: /home
    testConfigFile: all-branch-test.yaml
    imageTag: 0.1.4


  steps:
  - task: Docker@2
    displayName: Login to Docker Hub
    inputs:
      command: login
      containerRegistry: dockerHub


  - task: CopyFiles@2
    displayName: 'Copy test configFile'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '**/$(testConfigFile)'
      TargetFolder: '$(Agent.BuildDirectory)'


  - script: |
        sed -i 's/RUN source/# RUN source/g' Dockerfile.centos7
        docker build -t $(imageName):latest -t $(imageName):$(imageTag) -f Dockerfile.centos7 .
    displayName: 'Build primary docker image'
    failOnStderr: true


  - script: |
        sed -i 's/# RUN source/RUN source/g' Dockerfile.centos7      
        docker build -t $(imageName):runTest -f Dockerfile.centos7 .
    displayName: 'Build secondary docker image using cache'
    failOnStderr: true
    
 
  - script: |
        curl -LOs https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
        chmod +x container-structure-test-linux-amd64
        ./container-structure-test-linux-amd64 test --image $(imageName):runTest --config $(Agent.BuildDirectory)/$(testConfigFile)
    displayName: 'Test the docker image'
    failOnStderr: true
    

  - script: |
        docker push $(imageName):latest
        docker push $(imageName):$(imageTag)
    displayName: 'Push the docker image'
    failOnStderr: true
  
    
